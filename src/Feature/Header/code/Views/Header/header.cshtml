@using Feature.Authentication.Services
@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using AuthenticationManager = Sitecore.Security.Authentication.AuthenticationManager
@model RenderingModel
@{
  var homeItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Home");
  var homeItemUrl = Sitecore.Links.LinkManager.GetItemUrl(homeItem);

  var productsCatalogItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Products Catalog");
  
  var allProductsItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/All Products");
  var allProductsItemUrl = Sitecore.Links.LinkManager.GetItemUrl(allProductsItem);

  var topProductsItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Top Products");
  var topProductsItemUrl = Sitecore.Links.LinkManager.GetItemUrl(topProductsItem);

  var archiveProductsItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Archive Products");
  var archiveProductsItemUrl = Sitecore.Links.LinkManager.GetItemUrl(archiveProductsItem);

  var contactsItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Contacts");
  var contactsItemUrl = Sitecore.Links.LinkManager.GetItemUrl(contactsItem);
  
  var registrationItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Authentication/Registration");
  var loggingItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Authentication/Logging");

  var authenticated = false;
  var user = AuthenticationManager.GetActiveUser();
  if (!user.Name.Contains("Anonymous"))
  {
    authenticated = true;
  }
}

<header>
  <div class="header-container">
    <div class="header-logo">@Html.Sitecore().Field("Header Logo")</div>

    <div class="header-navbar">
      <a href="@homeItemUrl">@Html.Sitecore().Field("Page Title", homeItem)</a>

      <div class="header-dropdown">
        <button class="header-dropbtn">
          @Html.Sitecore().Field("Title", productsCatalogItem)<i class="fa fa-caret-down"></i>
        </button>

        <div class="header-dropdown-content">
          <a href="@allProductsItemUrl">@Html.Sitecore().Field("Page Title", allProductsItem)</a>

          @* TODO check rights -> default role *@
          @if (authenticated)
          {
            <a href="@topProductsItemUrl">@Html.Sitecore().Field("Page Title", topProductsItem)</a>
          }

          <a href="@archiveProductsItemUrl">@Html.Sitecore().Field("Page Title", archiveProductsItem)</a>
        </div>
      </div>

      <a href="@contactsItemUrl">@Html.Sitecore().Field("Page Title", contactsItem)</a>
    
      <div class="header-auth-button">
        <style>
          .registration,
          .logging-in,
          .logging-out {
              float: right;
              background-color: blue;
              font-size: 18px;
              color: white;
              text-align: center;
              padding: 30px 30px;
          }
        </style>
        @if (!authenticated)
        {
          <button class="registration" onclick="openUrl('@Sitecore.Links.LinkManager.GetItemUrl(registrationItem)')">
            Registration
          </button>
        
          <button class="logging-in" onclick="openUrl('@Sitecore.Links.LinkManager.GetItemUrl(loggingItem)')">
            Log in
          </button>
        }
        else
        {
          //onclick="@{ UserMaintenance.Logout(); }"
          <button class="logging-out" onclick="@{ UserMaintenance.Logout(); }">
            Log out
          </button>
        }
      </div>

      <div>
        <style>
          .user-name {
            color: white;
          }
        </style>
        @if (authenticated)
        {
          <h2 class="user-name" style="text-align: center">@user.LocalName</h2>
        }
      </div>
      
      <script>
        function openUrl(url) {
          window.location = url;
          window.open(url);
        }
      </script>
    </div>
  </div>
</header>