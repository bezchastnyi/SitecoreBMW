@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Data.Items;
@using Sitecore.Data.Managers;
@model RenderingModel
@{
  var contactsItem = Sitecore.Context.Database.Items.GetItem("/sitecore/Content/BMW/Contacts");
  var contacts = new List<Item>(contactsItem.Children);
  
  var contextLanguageId = LanguageManager.GetLanguageItemId(Sitecore.Context.Language, Sitecore.Context.Database);
  var contextLanguage = Sitecore.Context.Database.GetItem(contextLanguageId);
  var iso = contextLanguage["Regional Iso Code"];
  if (string.IsNullOrEmpty(iso))
  {
    iso = contextLanguage["Iso"];
  }
}

<div class="contact">
  @foreach (var contact in contacts)
  {
    if (string.IsNullOrEmpty(Html.Sitecore().Field("Country", contact).ToString()))
    {
      continue;
    }

    var countryField = string.Empty;
    var telephoneField = string.Empty;

    switch (iso)
    {
      case "ru-RU":
      {
        countryField = "Страна";
        telephoneField = "Телефон";
        break;
      }

      case "en":
      {
        countryField = "Country";
        telephoneField = "Telephone";
        break;
      }
    }

    var contactOutput = countryField + ": " + Html.Sitecore().Field("Country", contact) + "\\n" +
                             telephoneField + ": " + Html.Sitecore().Field("Telephone", contact) + "\\n" +
                             "Email: " + Html.Sitecore().Field("Email", contact);

    <button class="contact-button" onclick="alert('@contactOutput')">
      @Html.Sitecore().Field("Country Flag", contact, new { mh = 225, mw = 225 })
    </button>
  }
</div>